# 1,0은 횟수 0이다
# 1 + n-1 횟수
# 1 + n/2 횟수
# 1 + n/3 횟수
n = int(input())
 
if n/2 == 0:
    n = n/2
    
if( n/3 == 0):
    n = n/3
   


# 파이썬 3.5.5
# 1을 빼는 연산, 2로 나누는 연산, 3으로 나누는 연산
# 위 3가지 연산을 이용하여 정수를 1로 만드는데 소요되는 연산 횟수의 최솟값을 구하는 문제입니다.

while True:
    number = int(input("숫자를 입력하세요(음수 입력시 종료)): "))

# 0과 1을 1로 만드는데 필요한 연산의 횟수는 0입니다.
    count = [0, 0]

# 사용자가 입력한 수가 음수면 프로그램을 종료합니다.
    if number < 0:
        break

# 숫자 2부터 시작을합니다. 사용자가 입력한 수 number까지 진행합니다.
for i in range(2, number+1):

# 주어진 수 number를 1로 만드는 최소 횟수는 ((number-1)을 1로 만드는 최소 횟수 + 1)입니다.
    count.append(count[i-1] + 1)

if(i % 2 == 0):
# 현재 수가 2로 나눠지는 경우, (2로 나누는데 필요한 연산 수 1회 + 현재 수를 2로 나눈 수를 1로 만드는 최소 횟수)와
# 현재 수를 1로 만드는 최소 횟수를 비교하여 더 작은 값으로 대체합니다.
    count[i] = min(count[i], count[i//2] + 1)

if(i % 3 == 0):
# 현재 수가 3으로 나눠지는 경우, (3으로 나누는데 필요한 연산 수 1회 + 현재 수를 3으로 나눈 수를 1로 만드는 최소 횟수)와
# 현재 수를 1로 만드는 최소 횟수를 비교하여 더 작은 값으로 대체합니다.
    count[i] = min(count[i], count[i//3] + 1)

print(number, "를 1이 되게 하는 최소 연산의 횟수는 " , count[number] , "입니다.")